package jet.shareplot.persistence.ejb.sharequantity;  

import java.rmi.RemoteException;
import java.util.Collection;

import javax.ejb.CreateException;
import javax.ejb.FinderException;
import javax.ejb.EJBHome;

import jet.framework.util.ejb.EJBParam;

/**
 * Home interface for the bean 
 *
 * Generated by JetTools, do not edit this file directly.
 */
public interface ShareQuantityHome extends EJBHome {
        
    /**
     * <code>BEAN_NAME</code>
     */
    public final static String BEAN_NAME = "ShareQuantity";
    
    /**
     * @param idShareQuantity
     * @param changeFee
     * @param changeQuantity
     * @param changeType
     * @param changeValue
     * @param description
     * @param idShare
     * @param valueDate
     * @return ShareQuantityRemote
     * @throws CreateException
     * @throws RemoteException
     */
    public ShareQuantityRemote create( @EJBParam(name = "idShareQuantity") Long idShareQuantity, @EJBParam(name = "changeFee") java.math.BigDecimal changeFee, @EJBParam(name = "changeQuantity") java.math.BigDecimal changeQuantity, @EJBParam(name = "changeType") String changeType, @EJBParam(name = "changeValue") java.math.BigDecimal changeValue, @EJBParam(name = "description") String description, @EJBParam(name = "idShare") Long idShare, @EJBParam(name = "valueDate") java.util.Date valueDate) throws CreateException, RemoteException;
        
    /**
     * @param pkField
     * @return ShareQuantityRemote
     * @throws FinderException
     * @throws RemoteException
     */
    public ShareQuantityRemote findByPrimaryKey(java.lang.Object pkField) throws FinderException, RemoteException;
    
    /**
     * @return Collection
     * @throws FinderException
     * @throws RemoteException
     */
    public Collection<ShareQuantityRemote> findAll() throws FinderException, RemoteException;
    
    /**
     * @param idShare
     * @return Collection
     * @throws FinderException
     * @throws RemoteException
     */
    public Collection<ShareQuantityRemote> findByShare(Long idShare) throws FinderException, RemoteException;
    
    /**
     * @param sqlWhereClause
     * @param sqlArguments
     * @return Collection
     * @throws FinderException
     * @throws RemoteException
     */
    public Collection<ShareQuantityRemote> findByPreparedSQLQuery(String sqlWhereClause,Object[] sqlArguments) throws FinderException, RemoteException;
    
}