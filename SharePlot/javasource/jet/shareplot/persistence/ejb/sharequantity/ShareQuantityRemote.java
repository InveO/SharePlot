package jet.shareplot.persistence.ejb.sharequantity;

import org.eclipse.jdt.annotation.Nullable;
import javax.ejb.EJBException;
import javax.ejb.EJBObject;

import java.rmi.RemoteException;

/**
 * Remote interface for the bean.
 *
 * Generated by JetTools, do not edit this file directly.
 */
public interface ShareQuantityRemote extends EJBObject {


    /**
     * Get the value for the field idShareQuantity.
     *
     * @return Long value for the field idShareQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable Long getIdShareQuantity() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field idShareQuantity.
     *
     * @param idShareQuantity value for the field idShareQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setIdShareQuantity(final @Nullable Long idShareQuantity) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeFee.
     *
     * @return java.math.BigDecimal value for the field changeFee
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    java.math.@Nullable BigDecimal getChangeFee() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeFee.
     *
     * @param changeFee value for the field changeFee
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeFee(final java.math.@Nullable BigDecimal changeFee) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeQuantity.
     *
     * @return java.math.BigDecimal value for the field changeQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    java.math.@Nullable BigDecimal getChangeQuantity() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeQuantity.
     *
     * @param changeQuantity value for the field changeQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeQuantity(final java.math.@Nullable BigDecimal changeQuantity) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeType.
     *
     * @return String value for the field changeType
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable String getChangeType() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeType.
     *
     * @param changeType value for the field changeType
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeType(final @Nullable String changeType) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeValue.
     *
     * @return java.math.BigDecimal value for the field changeValue
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    java.math.@Nullable BigDecimal getChangeValue() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeValue.
     *
     * @param changeValue value for the field changeValue
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeValue(final java.math.@Nullable BigDecimal changeValue) throws EJBException, RemoteException;


    /**
     * Get the value for the field description.
     *
     * @return String value for the field description
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable String getDescription() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field description.
     *
     * @param description value for the field description
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setDescription(final @Nullable String description) throws EJBException, RemoteException;


    /**
     * Get the value for the field idPortfolio.
     *
     * @return Long value for the field idPortfolio
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable Long getIdPortfolio() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field idPortfolio.
     *
     * @param idPortfolio value for the field idPortfolio
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setIdPortfolio(final @Nullable Long idPortfolio) throws EJBException, RemoteException;


    /**
     * Get the value for the field idShare.
     *
     * @return Long value for the field idShare
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable Long getIdShare() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field idShare.
     *
     * @param idShare value for the field idShare
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setIdShare(final @Nullable Long idShare) throws EJBException, RemoteException;


    /**
     * Get the value for the field totalQuantity.
     *
     * @return java.math.BigDecimal value for the field totalQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    java.math.@Nullable BigDecimal getTotalQuantity() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field totalQuantity.
     *
     * @param totalQuantity value for the field totalQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setTotalQuantity(final java.math.@Nullable BigDecimal totalQuantity) throws EJBException, RemoteException;


    /**
     * Get the value for the field valueDate.
     *
     * @return java.util.Date value for the field valueDate
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    java.util.@Nullable Date getValueDate() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field valueDate.
     *
     * @param valueDate value for the field valueDate
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setValueDate(final java.util.@Nullable Date valueDate) throws EJBException, RemoteException;


    /**
     * Update record.
     *
     * @param changeFee value for the field changeFee
     * @param changeQuantity value for the field changeQuantity
     * @param changeType value for the field changeType
     * @param changeValue value for the field changeValue
     * @param description value for the field description
     * @param idPortfolio value for the field idPortfolio
     * @param idShare value for the field idShare
     * @param totalQuantity value for the field totalQuantity
     * @param valueDate value for the field valueDate
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void update(final java.math.@Nullable BigDecimal changeFee, final java.math.@Nullable BigDecimal changeQuantity, final @Nullable String changeType, final java.math.@Nullable BigDecimal changeValue, final @Nullable String description, final @Nullable Long idPortfolio, final @Nullable Long idShare, final java.math.@Nullable BigDecimal totalQuantity, final java.util.@Nullable Date valueDate) throws EJBException, RemoteException;
}
