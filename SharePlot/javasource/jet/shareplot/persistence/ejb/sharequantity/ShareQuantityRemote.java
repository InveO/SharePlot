package jet.shareplot.persistence.ejb.sharequantity;

import javax.annotation.Nullable;
import javax.ejb.EJBException;
import javax.ejb.EJBObject;

import java.rmi.RemoteException;

/**
 * Remote interface for the bean.
 *
 * Generated by JetTools, do not edit this file directly.
 */
public interface ShareQuantityRemote extends EJBObject {


    /**
     * Get the value for the field idShareQuantity.
     *
     * @return Long value for the field idShareQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    Long getIdShareQuantity() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field idShareQuantity.
     *
     * @param idShareQuantity value for the field idShareQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setIdShareQuantity(@Nullable final Long idShareQuantity) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeFee.
     *
     * @return java.math.BigDecimal value for the field changeFee
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    java.math.BigDecimal getChangeFee() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeFee.
     *
     * @param changeFee value for the field changeFee
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeFee(@Nullable final java.math.BigDecimal changeFee) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeQuantity.
     *
     * @return java.math.BigDecimal value for the field changeQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    java.math.BigDecimal getChangeQuantity() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeQuantity.
     *
     * @param changeQuantity value for the field changeQuantity
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeQuantity(@Nullable final java.math.BigDecimal changeQuantity) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeType.
     *
     * @return String value for the field changeType
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    String getChangeType() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeType.
     *
     * @param changeType value for the field changeType
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeType(@Nullable final String changeType) throws EJBException, RemoteException;


    /**
     * Get the value for the field changeValue.
     *
     * @return java.math.BigDecimal value for the field changeValue
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    java.math.BigDecimal getChangeValue() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field changeValue.
     *
     * @param changeValue value for the field changeValue
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setChangeValue(@Nullable final java.math.BigDecimal changeValue) throws EJBException, RemoteException;


    /**
     * Get the value for the field description.
     *
     * @return String value for the field description
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    String getDescription() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field description.
     *
     * @param description value for the field description
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setDescription(@Nullable final String description) throws EJBException, RemoteException;


    /**
     * Get the value for the field idShare.
     *
     * @return Long value for the field idShare
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    Long getIdShare() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field idShare.
     *
     * @param idShare value for the field idShare
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setIdShare(@Nullable final Long idShare) throws EJBException, RemoteException;


    /**
     * Get the value for the field valueDate.
     *
     * @return java.util.Date value for the field valueDate
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    @Nullable
    java.util.Date getValueDate() throws EJBException, RemoteException;
    
    /**
     * Set the value for the field valueDate.
     *
     * @param valueDate value for the field valueDate
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void setValueDate(@Nullable final java.util.Date valueDate) throws EJBException, RemoteException;


    /**
     * Update record.
     *
     * @param changeFee value for the field changeFee
     * @param changeQuantity value for the field changeQuantity
     * @param changeType value for the field changeType
     * @param changeValue value for the field changeValue
     * @param description value for the field description
     * @param idShare value for the field idShare
     * @param valueDate value for the field valueDate
     * @throws EJBException Thrown by the method to indicate a failure caused by a system-level error.
     * @throws RemoteException Thrown if one of a number of communication-related exceptions occurs during the execution of the remote method call.
     */
    void update(@Nullable final java.math.BigDecimal changeFee ,@Nullable final java.math.BigDecimal changeQuantity ,@Nullable final String changeType ,@Nullable final java.math.BigDecimal changeValue ,@Nullable final String description ,@Nullable final Long idShare ,@Nullable final java.util.Date valueDate) throws EJBException, RemoteException;
}
