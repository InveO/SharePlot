package jet.shareplot.persistence.dmc;

import java.rmi.RemoteException;

import javax.ejb.EJBException;

import jet.framework.manager.datamodel.interfaces.DataModelConverter2;
import jet.shareplot.persistence.ejb.sharevalue.ShareValueRemote;
import jet.shareplot.persistence.pojo.ShareValueItem;
import jet.util.models.interfaces.Model;
import jet.util.throwable.JETException;

/**
 * ShareValue DataModelConverter2
 *
 * Generated by JetTools, do not edit this file directly.
 */
public class ShareValueDMC implements DataModelConverter2<ShareValueRemote> {

    private static final long serialVersionUID = 1303211696L;

    @Override
    public Model readDataModelFromObject(final ShareValueRemote dataObject) throws JETException {
        final ShareValueItem item = new ShareValueItem();

        try {
            item.get_IdShareValue_Model().setNodeValue(dataObject.getIdShareValue());
            item.get_IdShare_Model().setNodeValue(dataObject.getIdShare());
            item.get_Value_Model().setNodeValue(dataObject.getValue());
            item.get_ValueDate_Model().setNodeValue(dataObject.getValueDate());
        } catch (final EJBException e) {
            throw new JETException("EJBException while reading from ShareValueRemote.", e);
        } catch (final RemoteException e) {
            throw new JETException("RemoteException while reading from ShareValueRemote.", e);
        }

        return item.get_Model();
    }

    @Override
    public void writeDataModelToObject(final Model dataModel, final ShareValueRemote dataObject) throws JETException {
        final ShareValueItem item = new ShareValueItem(dataModel);

        try {
            // do not update pk fields
            // note: all item set pk methods are note public, so use the setNodeValue method on model
            item.get_IdShareValue_Model().setNodeValue(item.getIdShareValue());
        } catch (final EJBException e) {
            throw new JETException("EJBException while writing to ShareValueRemote.", e);
        }
    }

}
