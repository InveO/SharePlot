package jet.shareplot.ac.bo.portfolio.portfolioshare;

import javax.annotation.Nonnull;

import jet.shareplot.ac.bo.share.ShareBOApplicationComponent;
import jet.shareplot.persistence.pojo.portfolio.PortfolioShareItem;
import jet.util.logger.JETLevel;
import jet.util.models.interfaces.Model;
import jet.util.throwable.JETException;
import jet.util.throwable.JETSystemError;

/**
 * Sample bo class, extending the pojo PortfolioShareItem.
 * 
 * Generated by JetTools, you can edit this file directly, once created it will not be overwritten
 * 
 * @author JetToolsFramework
 */
public class PortfolioShare extends PortfolioShareItem {

    private static final long serialVersionUID = 1L;

    private final PortfolioShareBOApplicationComponent portfolioShareAC;

    /**
     * Constructor, build an empty portfolioShare.
     * 
     * @param portfolioShareAC the portfolioShare application component
     * 
     * @see Model
     * @see PortfolioShareBOApplicationComponent
     */
    public PortfolioShare(@Nonnull final PortfolioShareBOApplicationComponent portfolioShareAC) {
        super();
        this.portfolioShareAC = portfolioShareAC;

        init();
    }

    /**
     * Constructor, build a portfolioShare from a Model.
     * 
     * @param model the model representing a portfolioShare entry in the table PortfolioShare
     * @param portfolioShareAC the portfolioShare application component
     * 
     * @see Model
     * @see PortfolioShareBOApplicationComponent
     */
    public PortfolioShare(@Nonnull final Model model, @Nonnull final PortfolioShareBOApplicationComponent portfolioShareAC) {
        super(model);
        this.portfolioShareAC = portfolioShareAC;

        init();
    }

    /**
     * Copy constructor, build a portfolioShare as a copy of another portfolioShare.
     * 
     * @param portfolioShare the portfolioShare to copy
     */
    public PortfolioShare(@Nonnull final PortfolioShare portfolioShare) {
        super(portfolioShare);
        this.portfolioShareAC = portfolioShare.portfolioShareAC;

        init();
    }

    private void init() {
        try {
            final ShareBOApplicationComponent shareAC = ShareBOApplicationComponent.getInstance(this.portfolioShareAC.getSession());

            final PortfolioShareInterceptor interceptor = new PortfolioShareInterceptor(shareAC);

            get_IdShare_Model().addInterceptor(interceptor);
            get_ValueDate_Model().addInterceptor(interceptor);
            get_ChangeQuantity_Model().addInterceptor(interceptor);
        } catch (final JETException e) {
            this.portfolioShareAC.logp(JETLevel.SEVERE, "PortfolioShare", "init", e.getMessage(), e);
            throw new JETSystemError(e.getMessage(), e);
        }
    }

}
